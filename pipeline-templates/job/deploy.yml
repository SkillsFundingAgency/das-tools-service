parameters:
  AksResourceGroup:
  AppGatewayName:
  AppGatewayResourceGroup:
  Environment:
  KeyVaultName:
  KubernetesCluster:
  KubectlVersion:
  ResourceGroupLocation:
  ServiceConnection:
  SharedSQLServerFQDN:
  SharedSQLServerUsername:
  SubscriptionId:

jobs:
- deployment: DeployTo_${{ parameters.Environment }}
  environment: ${{ parameters.Environment }}
  pool:
    name: 'DAS - Continuous Deployment Agents'
  variables:
  - name: KubernetesNamespace
    value: tools
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
          path: 'das-tools-service/'
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            Location: ${{ parameters.ResourceGroupLocation }}
            ParametersPath: $(Pipeline.Workspace)/das-tools-service/azure/template.parameters.json
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: ${{ parameters.SubscriptionId }}
            TemplatePath: $(Pipeline.Workspace)/das-tools-service/azure/template.json
            IsMultiRepoCheckout: true
        - task: replacetokens@3
          displayName: 'Tokenise manifests'
          inputs:
            rootDirectory: '$(Pipeline.Workspace)/das-tools-service/manifests'
            targetFiles: '**/*.yml'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'fail'
            keepToken: false
            tokenPrefix: '{{'
            tokenSuffix: '}}'
            verbosity: detailed
        - task: AzurePowerShell@5
          displayName: 'Fetch SQL Server Admin password from key vault'
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            scriptType: inlineScript
            inline: |
              $SharedSqlServerAdminPassword = Get-AzKeyVaultSecret -VaultName $(SharedKeyVaultName) -Name $(SharedSQLServerAdminKeyVaultSecretName) -AsPlainText
              Write-Output "Setting variable SharedSqlServerAdminPassword"
              Write-Output $SharedSqlServerAdminPassword
              Write-Output "##vso[task.setvariable variable=SharedSqlServerAdminPassword;isreadonly=true;issecret=true]$SharedSqlServerAdminPassword"
            azurePowerShellVersion: LatestVersion
        - task: SqlAzureDacpacDeployment@1
          displayName: 'Deploy DACPAC'
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            ServerName: ${{ parameters.SharedSQLServerFQDN }}
            DatabaseName: $(DatabaseName)
            SqlUsername: ${{ parameters.SharedSQLServerUsername }}
            SqlPassword: $(SharedSqlServerAdminPassword)
            DacpacFile: $(Pipeline.Workspace)/database/src/SFA.DAS.ToolService.Database/bin/Output/SFA.DAS.ToolService.Database.dacpac
        - task: KubectlInstaller@0
          displayName: 'Install Kubectl ${{ parameters.KubectlVersion }}'
          inputs:
            kubectlVersion: ${{ parameters.KubectlVersion }}
        - template: azure-pipelines-templates/deploy/step/kubernetes-create-namespace.yml@das-platform-building-blocks
          parameters:
            AksClusterName: ${{ parameters.KubernetesCluster }}
            AksResourceGroupName: ${{ parameters.AksResourceGroup }}
            AzureServiceConnection: ${{ parameters.ServiceConnection }}
            Namespace: $(KubernetesNamespace)
        - template: azure-pipelines-templates/deploy/step/kubernetes-create-ingress.yml@das-platform-building-blocks
          parameters:
            AksClusterName: ${{ parameters.KubernetesCluster }}
            AksResourceGroupName: ${{ parameters.AksResourceGroup }}
            AppGatewayName: ${{ parameters.AppGatewayName }}
            AppGatewayResourceGroup: ${{ parameters.AppGatewayResourceGroup }}
            AzureServiceConnection: ${{ parameters.ServiceConnection }}
            IngressManifestPath: $(Pipeline.Workspace)/das-tools-service/manifests/ingress.yml
            KeyVaultName: ${{ parameters.KeyVaultName }}
            Namespace: $(KubernetesNamespace)
        # apply config
        - template: azure-pipelines-templates/deploy/step/kubernetes-apply-manifest.yml@das-platform-building-blocks
          parameters:
            AksClusterName: ${{ parameters.KubernetesCluster }}
            AksResourceGroupName: ${{ parameters.AksResourceGroup }}
            AzureServiceConnection: ${{ parameters.ServiceConnection }}
            KubectlVersion: ${{ parameters.KubectlVersion }}
            ManifestFile: $(Pipeline.Workspace)/das-tools-service/manifests/shared-config.yml
            Namespace: $(KubernetesNamespace)
        # apply deployment
        - template: azure-pipelines-templates/deploy/step/kubernetes-apply-manifest.yml@das-platform-building-blocks
          parameters:
            AksClusterName: ${{ parameters.KubernetesCluster }}
            AksResourceGroupName: ${{ parameters.AksResourceGroup }}
            AzureServiceConnection: ${{ parameters.ServiceConnection }}
            KubectlVersion: ${{ parameters.KubectlVersion }}
            ManifestFile: $(Pipeline.Workspace)/das-tools-service/manifests/deployment.yml
            Namespace: $(KubernetesNamespace)
