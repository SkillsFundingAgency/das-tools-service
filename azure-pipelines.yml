trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

variables:
  - group: 'Dev Management Resources'
  - name: buildNumber
    value: $(Build.BuildNumber)

stages:
- stage: build
  displayName: Build Image
  jobs:
  - job: build_image
    displayName: Build Image
    pool:
      name: "DAS - Continuous Integration"
    steps:
      - task: gittools.gitversion.gitversion-task.GitVersion@5
        displayName: GitVersion
        inputs:
          configFilePath: GitVersion.yml
          updateAssemblyInfo: true

      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
          command: login
          containerRegistry: "Apprenticeships DevOps Docker Hub"

      - task: Docker@2
        displayName: Build Image
        inputs:
          command: build
          dockerfile: Dockerfile
          repository: apprenticeshipsdevops/das-tools-service
          tags: |
            $(build.buildnumber)
            $(build.buildnumber)-production

      - task: Docker@2
        displayName: Push Image
        inputs:
          command: push
          repository: apprenticeshipsdevops/das-tools-service
          tags: $(build.buildnumber)

      - task: Docker@2
        displayName: Push Image Production if master
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          command: push
          repository: apprenticeshipsdevops/das-tools-service
          tags: $(build.buildnumber)-production

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline Artifacts'
        inputs:
          path: '$(System.DefaultWorkingDirectory)/'
          artifactName: 'artifact'

- stage: deployment
  displayName: Deploy Application
  dependsOn: build
  jobs:
  - deployment: deploy_dev
    displayName: Deploy Dev
    environment: DEV
    pool:
      name: 'DAS - Continuous Integration'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: replacetokens@3
            inputs:
              rootDirectory: $(Pipeline.Workspace)/artifact/manifests
              targetFiles: '*.yml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'fail'
              keepToken: false
              tokenPrefix: '{{'
              tokenSuffix: '}}'
          - task: KubectlInstaller@0
            displayName: 'Install Kubectl latest'
          - task: Kubernetes@1
            displayName: 'kubectl apply'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: SFA-DAS-DevTest-ARM
              azureResourceGroup: $(AKSResourceGroupName)
              kubernetesCluster: $(AKSClusterName)
              useClusterAdmin: true
              command: apply
              useConfigurationFile: true
              configuration: $(Pipeline.Workspace)/artifact/manifests
